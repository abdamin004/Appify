version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: university_events_mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: university_events
    volumes:
      - mongo-data:/data/db
    networks:
      - university-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: university_events_backend
    restart: unless-stopped
    ports:
      - "5001:5000"
    env_file:
      - ./backend/.env
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - university-network
    environment:
      - PORT=${PORT}
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE=${JWT_EXPIRE}
      - FRONTEND_URL=${FRONTEND_URL}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: university_events_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - university-network
    stdin_open: true
    tty: true
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}

volumes:
  mongo-data:

networks:
  university-network:
    driver: bridge
